name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWt0UGN6QnpJaXdpVWtWUVR5STZJbmR2Y210bGNpMXlaWEFpTENKVVIxOUJVRWxmU1VRaU9pSXhOalUwTmpJM01DSXNJbFJIWDBGUVNWOUlRVk5JSWpvaU1XVXhaV1l4WW1KaU5tVTRZelppWXprd01ESXdOMk5oTldFeE1XTm1ObUlpTENKVVIxOUNUMVJmVkU5TFJVNGlPaUlpTENKR1NVeEZJam96T1N3aVJrbE1SVjlPUVUxRklqb2lXMU14UlRGZElFUmhibVJoWkdGdUlGczBPREJ3WFNCYlpIVmhiRjBnUUVGdWFXMWxjMTlQWTJWaGJpNXRhM1lpTENKSlJDSTZJa1JoYmw5aE5qWTNNRDB3UFRRNE1IQWlMQ0pEVFVRaU9pSmFiVnAwWTBkV2JrbERNWEJKU0hSd1ltdzViV0ZYZUd4bVUwRjBXWHB3TWtsSGVIQlpibWQ1VG1wVloweFlaM2xPYWxWMFkwZEdlVmxYTVhwSlJ6VjJURmRzZFZwdE9EbE5VMEYwWkcxWlowbHRVbmxaV0dRd1dsaG9NRkJYV25aaWJsSnRZVmQ0YkZCWFozVmtTRkp0VDI1U2JHVklVVGxLZVVKVlVubEJkRWxGUW1saVNGWnNXVEpHY2xwV09YVmFXRkl6WWpOS2NrbERZelphYlRsMVpFZE9kbUpIT1hsUVdHUnZZVmhTYkU5dFduWmlibEo2WVZod2JGQlVTVEJQYm1jNVpIa3hNRnBZYURCWU0yTjBUV3BCTm1WVU1IaE5SSEJzWW0xR2FXSkhWVGxLTWtwc1pFaGtiRnBYTkc5a1EzZDNURVJWZDAxRGEyNVBiVVp6WTBkb2FGQlRaSEJhYVdoelpFTm9NRXhFVVRWUFUydHpUVk40Y0ZwcGFITmtRMmd3VEVSVmQwMURhM05MUkVWMFMwaFJkRTVFYXpWTFUydDJUVk4zZDB0VGEyNUphVUYwWWxkR2QwbEVRV2RNVnpGc1pFZEdhMWxZVW1oUGJrMDJXVlJ2ZDBsSVVuQmtSM2hzVUZOS1lrbEZRa0ppYld4MFdsaE9abFF5VG14WlZ6Um5XRk5KWjB4WE1XeGtSMFpyV1ZoU2FFOXVUVFpqZW05M1NVaFNjR1JIZUd4UVUwcGlTVVZDUW1KdGJIUmFXRTVtVkRKT2JGbFhOR2RZVTBsblRGY3hiR1JIUm10WldGSm9TVWhTY0dSSGVHeFFVMHBpU1VWQ1FtSnRiSFJhV0U1bVZESk9iRmxYTkdkWVUwRnBTVU14YW1OdFdXZE5hbWRuVEZoQ2NHVkdPVzFpV0ZGblpWaFdNazVFU1hkalEwRjBZMmxCZVUxNU5EVk9lbGxuVEZoTlowOUVTWGRsUkZFMFRVTkJkR0pIT1c1aVIxWXlXbGQzWjFwWVNubGlNMGxuVEZoQ2VWcFlUbXhrUTBKNllrYzVNMGxETVdwUGJVVm5Za2RzYVdJelFqRmplVUYwV1ZkTlowMXBRWFJaYW5Cb1NVUk5NV0Y1UVhSWmVuQjZTVWRPZG1OSWEyZGxNamwzV0RKYWNHSkhWamxKUXpFMUluMD0=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
