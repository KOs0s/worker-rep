name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWt0UGN6QnpJaXdpVWtWUVR5STZJbmR2Y210bGNpMXlaWEFpTENKVVIxOUJVRWxmU1VRaU9pSXhOalUwTmpJM01DSXNJbFJIWDBGUVNWOUlRVk5JSWpvaU1XVXhaV1l4WW1KaU5tVTRZelppWXprd01ESXdOMk5oTldFeE1XTm1ObUlpTENKVVIxOUNUMVJmVkU5TFJVNGlPaUkzT1RNM09USTFNamMyT2tGQlJWOUdlREZFTW5VeU1VbG5WVGcxWkVsVFJFMVRTRVZzV1dsd1NGQkJSVmxOSWl3aVJrbE1SU0k2TVRRM0xDSkdTVXhGWDA1QlRVVWlPaUpiVXpBeExUQTNYU0JKNG9DWmJTQmhJRTV2WW14bElGc3hNRGd3Y0YwZ1cwUjFZV3hkSUVCQmJtbHRaWE5mVDJObFlXNHViV3QySWl3aVNVUWlPaUpKNG9DWmJWOWpOVGd6TWowd1BURXdPREJ3SWl3aVEwMUVJam9pV20xYWRHTkhWbTVKUXpGd1NVaDBjR0pzT1cxaFYzaHNabE5CZEZwdGJITmtSMVo1V0RKT2RtSllRbk5hV0dkblNXMVNlVmxZWkRCYVdHZ3dVRmRhZG1KdVVtMWhWM2hzVUZkbmRXUklVbTFQYmxKc1pVaFJPVXA1UWtGUlZ6VndZbGRXZWxnd09XcGFWMFoxU1VOak5scHRPWFZrUjA1MllrYzVlVkJZWkc5aFdGSnNUMjFhZG1KdVVucGhXSEJzVUZSSk1FOXVaemxOVkVFMlpWUXdlRTFFY0d4aWJVWnBZa2RWT1VveVNteGtTR1JzV2xjMGIyUkRkM2RNUkZWM1RVTnJiazl0Um5OalIyaG9VRk5rY0ZwcGFITmtRMmd3VEVSUk5VOVRhM05OVTNod1dtbG9jMlJEYURCTVJGVjNUVU5yYzB0RVJYUkxTRkYwVGtSck5VdFRhM1pOVTNkM1MxTnJhVWxETVhSWldFRm5UVU5CZEdKWFZqQlpWMUpvWkVkRk5tTjZjR2hKU0ZKd1pFZDRiRkJUU2tGUlZ6VndZbGRXZWxnd09XcGFWMFoxU1dsQmRHSlhWakJaVjFKb1pFZEZObU42Y0hwSlNGSndaRWQ0YkZCVFNrRlJWelZ3WWxkV2VsZ3dPV3BhVjBaMVNXbEJkR0pYVmpCWlYxSm9aRWRGWjJSSGJEQmlSMVU1U1d0Q1FtSnRiSFJhV0U1bVZESk9iRmxYTkdsSlF6RnFUMjVaWjJKSGJHbGpNMW93V1ZoWmVFbERNWGRqYlZaNldsaFJaMDVwUVhSYWVVRjVUa1JCWjB4WVRXZE5WR3Q1VFVobmVFMUVaM2RKUXpGM1lWaG9abHB0TVRCSlNHd3haR3BSZVUxSVFXZE1XRTR5WkVkR01rMVRNWGRaV0Vwb1lsaE5aMlJJVm5WYVZEQjRUMjFhY0dKSE1IUmFNMHBvWVZjME9VMURRWFJaTTBwdFNVUlJNRWxETVhOaU1tUnpXbGhhYkdKRFFteGpia3AyWTJsQmRGbDZjR2hKUjNod1dXMDVkMlJZVFdkTVYwWnFTVVJKWjB4WFJtbEpSRkYzWVhsQmRGbDZjSHBKUjA1MlkwaHJaMlV5T1hkWU1scHdZa2RXT1VsRE1UVWlMQ0pVU0ZWTlFrNUJTVXdpT2lJeE5EWWlMQ0pCVlZSSVQxSWlPaUkyTmpjeU56VXlNVGMzSW4wPQ==
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
