name: ENC-RUNNER
'on':
  push:
    branches:
      - server
jobs:
  download:
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    outputs:
      segments: ${{ steps.get-segments.outputs.segments }}
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Cache files for download
        id: cache-files
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Run download script
        run: >-
          cd /app

          python3 download.py
          ZnVjawZXlKUFYwNUZVaUk2SWt0UGN6QnpJaXdpVWtWUVR5STZJbmR2Y210bGNpMXlaWEFpTENKVVIxOUJVRWxmU1VRaU9pSXhOalUwTmpJM01DSXNJbFJIWDBGUVNWOUlRVk5JSWpvaU1XVXhaV1l4WW1KaU5tVTRZelppWXprd01ESXdOMk5oTldFeE1XTm1ObUlpTENKVVIxOUNUMVJmVkU5TFJVNGlPaUl5TURBNE5qVTJOamd4T2tGQlIxZEZObVpsTTNOVmJrNUtSamhEVkZVeWRrbHVjRmxIYkZReGNrTlJTamN3SWl3aVJrbE1SU0k2TVRNMUxDSkdTVXhGWDA1QlRVVWlPaUpiVXpBeExVVXdOMTBnUW05bmRYTWdVMnRwYkd3Z1d6UTRNSEJkSUZ0VGRXSmRJRUJCYm1sdFpYTmZUMk5sWVc0dWJXdDJJaXdpU1VRaU9pSkNiMmRmWldKak56WTlNRDAwT0RCd0lpd2lRMDFFSWpvaVdtMWFkR05IVm01SlF6RndTVWgwY0dKc09XMWhWM2hzWmxOQmRGcHRiSE5rUjFaNVdESk9kbUpZUW5OYVdHZG5TVzFTZVZsWVpEQmFXR2d3VUZkYWRtSnVVbTFoVjNoc1VGZG5kV1JJVW0xUGJsSnNaVWhST1VwNVFrRlJWelZ3WWxkV2VsZ3dPV3BhVjBaMVNVTmpObHB0T1hWa1IwNTJZa2M1ZVZCWVpHOWhXRkpzVDIxYWRtSnVVbnBoV0hCc1VGUkpNRTl1WnpsTlZFRTJaVlF3ZUUxRWNHeGliVVpwWWtkVk9Vb3lTbXhrU0dSc1dsYzBiMlJEZDNkTVJGVjNUVU5yYms5dFJuTmpSMmhvVUZOa2NGcHBhSE5rUTJnd1RFUlJOVTlUYTNOTlUzaHdXbWxvYzJSRGFEQk1SRlYzVFVOcmMwdEVSWFJMU0ZGMFRrUnJOVXRUYTNaTlUzZDNTMU5yYVVsRE1YUlpXRUZuVFVOQmRHSlhWakJaVjFKb1pFZEZObU42Y0doSlNGSndaRWQ0YkZCVFNrRlJWelZ3WWxkV2VsZ3dPV3BhVjBaMVNXbEJkR0pYVmpCWlYxSm9aRWRGTm1ONmNIcEpTRkp3WkVkNGJGQlRTa0ZSVnpWd1lsZFdlbGd3T1dwYVYwWjFTV2xCZEdKWFZqQlpWMUpvWkVkRloyUkhiREJpUjFVNVNXdENRbUp0YkhSYVdFNW1WREpPYkZsWE5HbEpRekZxVDI1WloySkhiR2xqTTFvd1dWaFplRWxETVhkamJWWjZXbGhSWjA1cFFYUmFlVUY1VGtSQloweFlUV2RQUkZVd1pVUlJORTFEUVhSalIydzBXREphZEdSRFFqVmtXRmt3VFdwQ2QwbERNWHBrYmxKb1pHcEZkR05IUm5sWlZ6RjZTVWhTTVdKdFZUbE5WSEJ0WVZkNGRFeFhaSGxaVjJ4MVVGUkJaMHhYVG5sYWFVRXhUVU5CZEdKSE9XNWlSMVl5V2xkM1oxcFlTbmxpTTBsblRGZE5ObGxUUW5OaFYwcDJZMGhXZWtsRE1XaFplVUY1U1VNeGFGbHBRVEJOUjNOblRGZE5ObU41UW1waU0wSTFTVWgwZG1OR09XMWhWM2hzWmxOQmRHVlJQVDBpTENKVVNGVk5RazVCU1V3aU9pSXhNelFpTENKQlZWUklUMUlpT2lJMk5qY3lOelV5TVRjM0luMD0=
      - name: Get segments
        id: get-segments
        run: |
          SEGMENTS=$(jq -c '.OUTPUT_FILES | keys' /app/data.json)
          echo "segments=$SEGMENTS" >> $GITHUB_OUTPUT
  encode:
    needs: download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        segment: ${{ fromJson(needs.download.outputs.segments) }}
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Encode segment
        run: |
          cd /app
          mkdir -p encoded
          python3 encode.py ${{ matrix.segment }}
      - name: Save encoded segment
        uses: actions/upload-artifact@v4
        with:
          name: segment-${{ matrix.segment }}
          path: /app/encoded
  upload:
    needs: encode
    runs-on: ubuntu-latest
    container:
      image: docker.io/amandaa00/git-atc:test-para
    steps:
      - name: Restore download cache (for required files)
        uses: actions/cache@v3
        with:
          path: /app
          key: ${{ github.sha }}-download
      - name: Download all encoded segments
        uses: actions/download-artifact@v4
        with:
          pattern: segment-*
          path: /app/encoded
      - name: Extract necessary files and clean up
        run: |
          cd /app/encoded

          for dir in segment-*; do
            if [ -d "$dir" ]; then
              mv "$dir"/* .
              rmdir "$dir"
            fi
          done

          ls -sh
      - name: Merge and upload files
        run: |
          cd /app

          python3 upload.py
  delete:
    needs: upload
    runs-on: ubuntu-latest
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: segment-*
